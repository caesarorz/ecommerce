version: '3.8'
services:

  ecommerce_api:
    container_name: ec_api
    build:
      context: .
      dockerfile: ./ecommerce/Dockerfile
    restart: always
    environment:
      - DB_HOST=ecommerce_db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_DEBUG=${DJANGO_DEBUG}
      - ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
      - AWS_KEY_ID=${AWS_KEY_ID}
      - AWS_SECRET_KEY=${AWS_SECRET_KEY}
      - AWS_BUCKET_NAME=${AWS_BUCKET_NAME}
    volumes:
      - static-data:/vol/app
    depends_on:
      - ecommerce_db

  ecommerce_db:
    container_name: ec_db
    image: postgres:13-alpine
    restart: always
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    ports:
      - 5335:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data

  proxy:
    container_name: ec_proxy
    build:
      context: ./proxy
    restart: always
    depends_on:
      - ecommerce_api
    ports:
      - 8001:8000
    volumes:
      - static-data:/vol/static

volumes:
  static-data:
  postgres-data:

